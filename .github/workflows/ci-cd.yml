name: GoChat CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_gochat
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        
    - name: Install dependencies
      working-directory: ./backend
      run: |
        go mod download
        
    - name: Run tests
      working-directory: ./backend
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_gochat
        SECRET_KEY: test-secret-key
      run: |
        go test -v -race -coverprofile=coverage.out ./...
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.out
        flags: backend
  
  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        
    - name: Install dependencies
      working-directory: ./frontend
      run: |
        npm install --legacy-peer-deps
        
    - name: Run tests
      working-directory: ./frontend
      run: |
        CI=true npm test -- --passWithNoTests
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/coverage-final.json
        flags: frontend
  
  # build-and-deploy job'ı geçici olarak devre dışı bırakıldı
  # Eğer Docker Hub'a deploy etmek isterseniz, aşağıdaki yorum satırlarını kaldırın
  # ve GitHub repository'nize DOCKERHUB_USERNAME ve DOCKERHUB_TOKEN secret'larını ekleyin
  
  # build-and-deploy:
  #   needs: [test-backend, test-frontend]
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #   - uses: actions/checkout@v3
  #   
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v2
  #     
  #   - name: Login to DockerHub
  #     uses: docker/login-action@v2
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}
  #   
  #   - name: Build and push backend
  #     uses: docker/build-push-action@v4
  #     with:
  #       context: ./backend
  #       push: true
  #       tags: ${{ secrets.DOCKERHUB_USERNAME }}/gochat-backend:latest
  #   
  #   - name: Build and push frontend
  #     uses: docker/build-push-action@v4
  #     with:
  #       context: ./frontend
  #       push: true
  #       tags: ${{ secrets.DOCKERHUB_USERNAME }}/gochat-frontend:latest
